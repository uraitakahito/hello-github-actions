# https://github.com/jlesage/docker-baseimage-gui/blob/master/.github/workflows/build-baseimage.yml
name: Docker Baseimage CI/CD

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE_NAME: uraitakahito/baseimage-gui

on:
  push:
    branches: '*'
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-pre.[0-9]+
  pull_request:

jobs:
  build:
    name: Build image
    runs-on: ubuntu-20.04

    # services:
    #   registry:
    #     image: registry:2
    #     ports:
    #       - 5000:5000

    strategy:
      fail-fast: false
      matrix:
        info:
          # - '{ "tag_prefix": "alpine-3.16",  "baseimage": "uraitakahito/baseimage:alpine-3.16-v3.6.2",  "platforms": "linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "alpine-3.17",  "baseimage": "uraitakahito/baseimage:alpine-3.17-v3.6.2",  "platforms": "linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "alpine-3.18",  "baseimage": "uraitakahito/baseimage:alpine-3.18-v3.6.2",  "platforms": "linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "alpine-3.19",  "baseimage": "uraitakahito/baseimage:alpine-3.19-v3.6.2",  "platforms": "linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8" }'
          - '{ "tag_prefix": "alpine-3.20",  "baseimage": "uraitakahito/baseimage:alpine-3.20-v3.6.2",  "platforms": "linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "debian-10",    "baseimage": "uraitakahito/baseimage:debian-10-v3.6.2",    "platforms": "linux/amd64,linux/386,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "debian-11",    "baseimage": "uraitakahito/baseimage:debian-11-v3.6.2",    "platforms": "linux/amd64,linux/386,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "ubuntu-16.04", "baseimage": "uraitakahito/baseimage:ubuntu-16.04-v3.6.2", "platforms": "linux/amd64,linux/386,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "ubuntu-18.04", "baseimage": "uraitakahito/baseimage:ubuntu-18.04-v3.6.2", "platforms": "linux/amd64,linux/386,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "ubuntu-20.04", "baseimage": "uraitakahito/baseimage:ubuntu-20.04-v3.6.2", "platforms": "linux/amd64,linux/arm/v7,linux/arm64/v8" }'
          # - '{ "tag_prefix": "ubuntu-22.04", "baseimage": "uraitakahito/baseimage:ubuntu-22.04-v3.6.2", "platforms": "linux/amd64,linux/arm/v7,linux/arm64/v8" }'

    steps:
      # - name: Free disk space
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     tool-cache: true
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: true
      #     docker-images: true
      #     swap-storage: false

      - name: Prepare
        id: prep
        run: |
          # Determine the Docker container version.
          VERSION=unknown
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            # Git tag pushed: use tag as the version.
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF =~ refs/heads/* ]]; then
            # Git commit pushed: use the commit SHA as the version.
            VERSION=${GITHUB_SHA::8}
          elif [[ $GITHUB_REF =~ refs/pull/* ]]; then
            # Pull request: use PR number as the version.
            VERSION=pr-${{ github.event.number }}
          else
            echo "::error::Unexpected GITHUB_REF: $GITHUB_REF"
            exit 1
          fi
          # Determine the version to put in container label.
          LABEL_VERSION=${VERSION}
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            LABEL_VERSION=${VERSION:1}
          fi
          # Determine the Docker container tags.
          TAGS="${{ env.DOCKER_IMAGE_NAME }}:${{ fromJSON(matrix.info).tag_prefix }}-${VERSION}"
          if [[ $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # For version with format vX.Y.Z, we want to add additional tags:
            #   - vX.Y
            #   - vX
            V=${VERSION:1}
            MAJOR_MINOR=${V%.*}
            MAJOR=${MAJOR_MINOR%.*}
            TAGS="$TAGS,${{ env.DOCKER_IMAGE_NAME }}:${{ fromJSON(matrix.info).tag_prefix }}-v${MAJOR_MINOR}"
            TAGS="$TAGS,${{ env.DOCKER_IMAGE_NAME }}:${{ fromJSON(matrix.info).tag_prefix }}-v${MAJOR}"
          fi
          # Determine the release type.
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
              IS_RELEASE=yes
              if [[ $GITHUB_REF =~ -pre\.[0-9]+ ]]; then
                  RELEASE_TYPE="pre"
              else
                  RELEASE_TYPE="standard"
              fi
          else
              IS_RELEASE=no
              RELEASE_TYPE="n/a"
          fi
          # Print results.
          echo "::group::Results"
          echo "Github reference: $GITHUB_REF"
          echo "Release: $IS_RELEASE"
          echo "Release type: $RELEASE_TYPE"
          echo "Docker container version: $VERSION"
          echo "Docker container version label: $LABEL_VERSION"
          echo "Docker container tag(s): $TAGS"
          echo "::endgroup::"
          # Export outputs.
          echo "is_release=${IS_RELEASE}" >> $GITHUB_OUTPUT
          echo "release_type=${RELEASE_TYPE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "label_version=${LABEL_VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          #echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      # The following actions uses node12 which is deprecated and will be forced to run on node16: mig4/setup-bats@v1. For more info:
      # https://github.blog/changelog/2023-06-13-github-actions-all-actions-will-run-on-node16-instead-of-node12-by-default/
      # - name: Setup BATS
      #   uses: mig4/setup-bats@v1

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64,ppc64le,mips64,s390x

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
